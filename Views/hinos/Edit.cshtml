@model Worship.hino

@{
    ViewBag.Title = "Editar música";
}

<h2>Editar música</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.cd_hino)
        @Html.HiddenFor(model => model.tx_titulo_hino)
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.tx_titulo_hino, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DisplayFor(model => model.tx_titulo_hino)
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.tx_inicio, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.tx_inicio, new { htmlAttributes = new { @class = "form-control", @placeholder = "Primeira frase da música..." } })
                        @Html.ValidationMessageFor(model => model.tx_inicio, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.tx_nome_compositor_letra, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.tx_nome_compositor_letra, new { htmlAttributes = new { @class = "form-control", @placeholder = "Autor da letra..." } })
                        @Html.ValidationMessageFor(model => model.tx_nome_compositor_letra, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.tx_nome_compositor_musica, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.tx_nome_compositor_musica, new { htmlAttributes = new { @class = "form-control", @placeholder = "Autor da música..." } })
                        @Html.ValidationMessageFor(model => model.tx_nome_compositor_musica, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.nr_ano, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.nr_ano, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ano de composição da música..." } })
                        @Html.ValidationMessageFor(model => model.nr_ano, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.tx_tonalidade, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        @Html.DropDownList("tx_tonalidade", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.tx_tonalidade, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Salvar" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
   <div class="form-horizontal">
        <hr />

        <div class="row">
            @using (Html.BeginForm("Create", "hino_genero"))
            {
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.cd_hino)
                <div class="col-md-6">
                    <div class="form-inline">
                        @Html.LabelFor(model => model.hino_generos.FirstOrDefault().genero_letra.tx_genero_letra, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownList("cd_genero_letra", null, htmlAttributes: new { @class = "form-control" })
                        <button type="submit" class="btn btn-primary AdicionarTopico">
                            <i class="glyphicon glyphicon-ok"></i> Adicionar
                        </button>
                    </div>
                    @Html.Partial("_HinosTopicosEdit", Model.hino_generos.Where(g => g.id_genero == "L"))
                </div>
            }
            @using (Html.BeginForm("Create", "hino_genero"))
            {
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.cd_hino)
                <div class="col-md-6">
                    <div class="form-inline">
                        @Html.LabelFor(model => model.hino_generos.FirstOrDefault().genero_musica.tx_genero_musica, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownList("cd_genero_musica", null, htmlAttributes: new { @class = "form-control" })
                        <button type="submit" class="btn btn-primary AdicionarGenero">
                            <i class="glyphicon glyphicon-ok"></i> Adicionar
                        </button>
                    </div>
                    @Html.Partial("_HinosGenerosEdit", Model.hino_generos.Where(g => g.id_genero == "M"))
                </div>
            }
        </div>
    </div>
<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(document).ready(function () {
        $('.Excluir').click(function () {
            var id = $(this).attr('id');
            var topico_genero = id.substring(0,1);
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Delete", "hino_genero")',
                data: {
                    __RequestVerificationToken: $("input[name=__RequestVerificationToken]").val(),
                    cd_hino: @Html.Raw(Model.cd_hino),
                    cd_genero: $(this).attr('value'),
                    id_genero: topico_genero
                },
                success: function (data) {
                    // Perform redirect
                    window.location.href = data;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Falha na exclusão do gênero. Tente novamente mais tarde.');
                    alert(xhr);
                    alert(ajaxOptions);
                    alert(throwError);
                }
            });
        });
        $('.AdicionarTopico').click(function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Create", "hino_genero")',
                async: false,
                data: {
                    __RequestVerificationToken: $("input[name=__RequestVerificationToken]").val(),
                    cd_hino: @Html.Raw(Model.cd_hino),
                    cd_genero: $("#cd_genero_letra").val(),
                    id_genero: 'L'
                },
                dataType: 'json',
                success: function (data) {
                    // Perform redirect
                    window.location.href = data;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Falha na inclusão do tópico. Tente novamente mais tarde.');
                }
            });
        });
        $('.AdicionarGenero').click(function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Create", "hino_genero")',
                async: false,
                data: {
                    __RequestVerificationToken: $("input[name=__RequestVerificationToken]").val(),
                    cd_hino: @Html.Raw(Model.cd_hino),
                    cd_genero: $("#cd_genero_musica").val(),
                    id_genero: 'M'
                },
                dataType: 'json',
                success: function (data) {
                    // Perform redirect
                    window.location.href = data;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Falha na inclusão do gênero. Tente novamente mais tarde.');
                }
            });
        });
    });
</script>